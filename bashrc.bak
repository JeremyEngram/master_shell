#!/bin/bash

# Check if running interactively
if [ -z "$PS1" ]; then
    return
fi

# Check window size after each command
shopt -s checkwinsize

# Set chroot if available
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Set fancy prompt
set_fancy_prompt() {
    if ! [ -n "${SUDO_USER}" -a -n "${SUDO_PS1}" ]; then
        PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    fi
}

# Set prompt command
set_prompt_command() {
    export PROMPT_COMMAND='RETRN_VAL=$?;logger -p local6.debug " $(history 1) | [$RETRN_VAL]"'
}

# Define myip function
myip () {
    curl -s "http://api.duckduckgo.com/?q=ip&format=json" | jq '.Answer' | grep --color=auto -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"
}

# Define dropin function
dropin () { 
  read -p "dropin: " pkg
  sudo apt install -y "$pkg" | tee -a /var/log/apt/implemented.log
}

# Define rshell function
rshell () {
  ssh jeremy@0.tcp.ngrok.io -p 11255  
}

# Define locatedirs function
locatedirs () {
    locate -0 -b -A "$@" | xargs -0 -I {} bash -c '[ -d "{}" ] && echo "{}"'
}

# Define findfile alias
alias findfile='find . -name'

# Set prompt and command hooks
set_fancy_prompt
set_prompt_command
