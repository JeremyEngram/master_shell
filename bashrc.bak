# System-wide .bashrc file for interactive bash(1) shells.

# To enable the settings / commands in this file for login shells as well,
# this file has to be sourced in /etc/profile.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, overwrite the one in /etc/profile)
# but only if not SUDOing and have SUDO_PS1 set; then assume smart user.
if ! [ -n "${SUDO_USER}" -a -n "${SUDO_PS1}" ]; then
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

# Commented out, don't overwrite xterm -T "title" -n "icontitle" by default.
# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
#    ;;
#*)
#    ;;
#esac

# enable bash completion in interactive shells
#if ! shopt -oq posix; then
#  if [ -f /usr/share/bash-completion/bash_completion ]; then
#    . /usr/share/bash-completion/bash_completion
#  elif [ -f /etc/bash_completion ]; then
#    . /etc/bash_completion
#  fi
#fi

##########################################################################################################################################################################

myip () {
    curl -s "http://api.duckduckgo.com/?q=ip&format=json" | jq '.Answer' | grep --color=auto -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"
}

dropin () { 
  read -p "dropin: " pkg; sudo apt install -y $pkg | tee -a /var/log/apt/implemented.log
}


rshell () {
  ssh jeremy@0.tcp.ngrok.io -p 11255  
}


#phoneterm=/run/user/1000/gvfs/mtp:host=TCL_A508DL_N79XRWO7XO8P7XBQ

# locate directories:
# -------------------
locatedirs () {
    locate -0 -b -A "$@" | xargs -0 -I {} bash -c '[ -d "{}" ] && echo "{}"'
}



  #getOpenTabs() {
  #    local profile=$( sed -n -r '/^Path=/,/^Default=1/{ s|^Path=(.*)|\1|p; }' 
  #        "$HOME/.mozilla/firefox/profiles.ini" )
  #    # https://github.com/avih/dejsonlz4/blob/master/src/dejsonlz4.c
  #    dejsonlz4 "$HOME/.mozilla/firefox/$profile/sessionstore-backups/recovery.jsonlz4" |
  #        jq -c '.windows[].tabs[].entries[-1].url' |
  #        sed 's|^"||; s|"$||;' |
  #        xclip -selection c
  #}






#url2pdf() {
#read -p "URL: |  FILENAME: .pdf" url filename
#wkhtmltopdf $url ~/Documents/eBooks/$filename.pdf
#}



# sudo hint
if [ ! -e "$HOME/.sudo_as_admin_successful" ] && [ ! -e "$HOME/.hushlogin" ] ; then
    case " $(groups) " in *\ admin\ *|*\ sudo\ *)
    if [ -x /usr/bin/sudo ]; then
	cat <<-EOF
	To run a command as administrator (user "root"), use "sudo <command>".
	See "man sudo_root" for details. ;)
	
	EOF
    fi
    esac
fi



# if the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then
	function command_not_found_handle {
	        # check because c-n-f could've been removed in the meantime
                if [ -x /usr/lib/command-not-found ]; then
		   /usr/lib/command-not-found -- "$1"
                   return $?
                elif [ -x /usr/share/command-not-found/command-not-found ]; then
		   /usr/share/command-not-found/command-not-found -- "$1"
                   return $?
		else
		   printf "%s: command not found\n" "$1" >&2
		   return 127
		fi
	}
fi

############################################################################################################

#alias add2zip='read -p "add2zip: " add sudo zip -ur $add'
#alias implement='read -p "implement: " pkg; sudo apt install -y  $pkg | tee -a /var/log/apt/implemented.log'
alias dropoff='sudo apt remove -y'
alias blowoff='sudo apt clean && sudo apt purge && sudo apt autoremove'
alias search='sudo apt-cache search'
alias show='sudo apt-cache show'
alias arm='sudo chmod +x'
alias unet='sudo QT_X11_NO_MITSHM=1 /usr/bin/unetbootin'
alias url2pdf='wkhtmltopdf'
alias newshell='gnome-terminal -x'

alias findfile='find . -name'

alias phoneterm='gnome-terminal -x /run/user/1000/gvfs/mtp:host=TCL_A508DL_N79XRWO7XO8P7XBQ'

