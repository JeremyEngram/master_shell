#!/bin/bash

# Displaying a banner message for the start of the installation process
banner "INIT FIRST INSTALL"

# Announcing the purpose of the script
echo
echo " FULL SYSTEM FIRST TIME INSTALL OF ALL USER PREFERENCES AND CONFIGURATIONS "
echo 

# Sleeping for 2 seconds before continuing
sleep 2

# Creating user system log directories and custom user logs
sudo mkdir /var/log/nmap
sudo chmod 777 /var/log/nmap
sudo touch /var/log/apt/search.log /var/log/apt/show.log /var/log/apt/implemented.log
sudo chown $user:$user /var/log/apt/search.log /var/log/apt/show.log /var/log/apt/implemented.log
sudo chmod 777 /var/log/apt/search.log /var/log/apt/show.log /var/log/apt/implemented.log

# Creating symbolic links from /opt to /usr/local/bin
ln /opt/* -s /usr/local/bin/*

# Disabling Apport error reporting
sudo service apport stop
sudo sed -i -e 's/enabled=1/enabled=0/g' /etc/default/apport

# Performing first time full system update and upgrade
echo "Full System Update & Upgrade"
sudo apt update && sudo apt upgrade -y && sudo apt autoremove
echo

# Minimizing window launchers on click
gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'

# Taking ownership of widely used system folders for default user
echo "Taking Full Ownership Of System Directories"
sudo chown $USER /opt /usr/local/bin /var/www/html
echo

# Implementing Boot-Repair
echo "Implementing Boot-Repair..."
sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt-get update -y
sudo apt-get install -y boot-repair
boot-repair

# Removing extra fonts
echo "Removing Extra Fonts..."
sudo apt-get remove -y [list of fonts]
sudo apt purge [list of fonts] && sudo apt autoremove

# Implementing Zeit
sudo add-apt-repository ppa:blaze/main
sudo apt update
sudo apt install zeit

# Implementing Ubuntu-Cleaner
sudo add-apt-repository ppa:gerardpuig/ppa
sudo apt-get update
sudo apt-get install ubuntu-cleaner

# Arming all custom scripts for use
echo "Arming All Custom Scripts For Use... ARMED!"
sudo chmod +x /usr/local/bin/*

# Implementing full custom packages install
echo "Implementing Full Custom Packages Install... WAIT FOR IT!"
echo 
PKGS="list of packages"
for p in $PKGS; do
   sudo apt-cache show $p | tee -a ~/Desktop/show.log
   sudo apt install -y "$p"
done

echo

# Unpackaging and installing Tor Web Browser
echo "Unpackaging Tor Web Browser From Source & Installing..."
wget [Tor Browser URL] -P /opt
tar xf /opt/*.tar.xz && sudo rm -rf /opt/*.tar.xz

# Removing default unused miscellaneous packages
echo "Remove ALL Default System Packages If They Exist..."
PKGS="list of default packages"
for p in $PKGS; do
   echo "$p" | tee -a ~/Desktop/dropoff.log
   sudo apt remove -y "$p"
done

echo

# Implementing Python3.9 from Linux repository
echo "Implementing Python3.9 From Linux Repository"
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install -y python3.9

echo

# Installing VNC Viewer and Server from source website
echo "Do you wish to install VNC viewer from source website?"
select yn in "Yes" "No"; do
    case $yn in
        Yes ) echo "Installing VNC Viewer" | wget [VNC Viewer URL]; sudo chmod +x VNC-Viewer*.deb; sudo dpkg -i VNC-Viewer*.deb && sudo rm -rf VNC-Viewer*.deb; break;;
        No ) exit;;
    esac
done

echo

echo "Do you wish to install VNC server from source website?"
select yn in "Yes" "No"; do
    case $yn in
        Yes ) echo "Installing VNC Server" | wget [VNC Server URL]; sudo chmod +x VNC-Server*.deb; sudo dpkg -i VNC-Server*.deb && sudo rm -rf VNC-Server*.deb; break;;
        No ) exit;;
    esac
done

echo

# Reducing battery usage with TLP
echo "Reduce Battery Useage With TLP..."
sudo systemctl enable tlp
echo

# Running Fedora Flatpak Repo
